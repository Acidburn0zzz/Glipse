
<h2>Remote Plugin</h2>

<div class="plugin-summary">
    The Remote plugin is one of Glimpse's most powerful features. The plugin goes architecture has both client and server components. 
    The plugin allows you to view requests from not only your own browser, but from other devices in any location. This allows for 
    several interesting use cases, including mobile debugging, remote client debugging, tracking workflows, etc.
</div>

<div class="plugin-howto">
    <h3>Usage</h3>
        
    <table width="100%">
        <tr>
            <td width="30%"><h4><span class="header-number">1)</span> Watch</h4></td> 
            <td rowspan="2" width="4%"><img src="@Links.Content.cs_rightImg_png" style="margin:5em 0 0 0;" /></td>
            <td width="30%"><h4><span class="header-number">2)</span> Select</h4></td> 
            <td rowspan="2" width="4%"><img src="@Links.Content.cs_rightImg_png" style="margin:5em 0 0 0;" /></td>
            <td width="32%"><h4><span class="header-number">Opt.)</span> Rename</h4></td> 
        </tr>
        <tr>
            <td style="padding-left:0.5em;">
                Watch the Client Session Panel for a client that you are interested in.
            </td>
            <td style="padding-left:0.5em;"> 
                Once target client appears, select it and select the target clients request you are after.
            </td>
            <td style="padding-left:0.5em;"> 
                At any time a can change your clients name by going to the following url and setting the name:
                <ul class="plain">
                    <li>http://yoursite.com/Glimpse/Remote, or</li>
                    <li>http://127.0.0.1/Glimpse/Remote</li>
                </ul>
            </td>
        </tr>
    </table>
</div>
    
<div class="plugin-layout">
    <h3>Layout</h3> 
    <img src="@Links.Content.Plugin.Remote_jpg" />
    <ol class="plain">
        <li><span>Client Session Panel</span>: List of available client session's</li>
        <li><span>Client Request Panel</span>: List of available client request's</li>
        <li><span>Client Name</span>: Name given to the session that is being tracked by Glimpse</li>
        <li><span>Method</span>: HTTP method used for the individual request (typically GET or POST)</li>
        <li><span>Request URL</span>: URL that can be used identity individual requests</li>
        <li><span>Browser</span>: Browser name that has been used for the request</li>
        <li><span>Data/Time</span>: When the request was made</li>
        <li><span>Ajax</span>: Whether the request was made via Ajax</li>
        <li><span>Launch</span>: Opens a given request as the current context</li>
        <li><span>Count</span>: Number of requests that are available to be viewed</li>
    </ol>
</div>

<div class="plugin-know">
    <h3>A case study</h3>
    <ul class="plain"> 
    <li>
    <span>Scenario</span>
<p>    So your site works fine and is in production when you get a call from a user reporting a problem on a certain page. The same page works fine on your machine though.</p>
<p>Glimpse has a feature which allows you to look at the "debug information" for page requests made by other users and other machines. This is always helpful if you are debugging a site in a mobile browser where the Glimpse client panel is not usable.</p>
</li>
<li>
<span>Setup</span>
<ul class="plain"> 
<li>First you need to make sure that Glimpse is installed on the production site and turned on.</li>
<li>Next you need to enable the IP address for the user who reported the problem. You user could tell you her address, but that may not actually be the public address used for the request. Point the user to http://www.prodcutionsite.com/glimpse/config , under "Your Settings" is the IP address that server sees. Add that IP address to the allowed addresses in web.config.</li>
<li>In the current version, nothing prevents the user from clicking the 'eye' and see the debug information. If you have any data you rather not share with the user, turn that particular plugin off by using plugin blacklisting.</li>
<li>Tell the user to click the "Set Glimpse Session Name" button on the same page. The user is then asked to specify a name. Their own name or company name would be a good choice. This also enables Glimpse on the user's browser.</li>
<li>Now ask the user to load the problematic page again, she does not have to click on the Eye icon to see the Glimpse panel. That would just be confusing for most users.</li>
  </ul>
  </li>
<li>
<span>Review remote requests</span>
<p>Now return to your own browser and open the production site as well. Click on the 'Remote' tab. On the right hand side you should see a list of different clients and the number of request that were monitored by Glimpse. In the 'Client' column you should see the name that was specified by the user. Click on 'Launch' next to it to show the requests for the client.</p>
<p>The remote tab behaves similar to the Ajax tab, you can 'Launch' one request to see the full data about that request. On the Request tab you can verify that the request was made by a remote client machine. You can further review the information to find out what may have caused the problem.</p>
<p>The Remote tab can also be helpful for local development. You can use different browsers to access your site and then compare the requests in one place.</p>


</li>
    </ul>
</div>

<div class="plugin-know">
    <h3>Did you know</h3> 
    <ul class="plain">
        <li>
            <span>That you can configure how many requests your server will remember</span>: To configure how
            many requests your server will hang onto you can simply adjust config as follows (note 15 is the
            default amount that we keep):

<pre class="csharpcode">
<span class="kwrd">&lt;</span><span class="html">glimpse</span> <span class="attr">enabled</span><span class="kwrd">="true"</span> <span class="attr">requestLimit</span><span class="kwrd">="5"</span> <span class="kwrd">/&gt;</span></pre>

        </li>
    </ul>
</div>

<div class="plugin-faq">
    <h3>Frequently Asked Questions</h3> 
    <ol class="plain">
        <li>
            <div>What happens when the maximum number of stored requests is reached (by default 15)?</div>
            Internally we store the requests in a FIFO Queue. This means that when the maximum number spaces in the 
            queue are filled, we take the first one that was entered and remove it from the queue, thus making room 
            for the new request.
        </li>  
    </ol>
</div>